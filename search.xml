<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用win10镜像安装Framework3.5]]></title>
    <url>%2F2019%2F02%2F16%2F%E4%BD%BF%E7%94%A8win10%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85Framework3-5%2F</url>
    <content type="text"><![CDATA[前言在Windows10中，当我们安装某些软件的时候会提示“你的电脑上的应用需要使用以下Windows功能:.NET Framework 3.5(包括.NET 2.0和3.0)”。在没网或者内网环境并且没有离线包的情况下可以使用win10的镜像.iso文件进行安装。 装载镜像在ISO文件右键装载，系统会显示虚拟光驱“DVD驱动器(G)”,记下盘符G(以你的系统为准)。 管理员运行powershell或者命令提示符输入dism.exe /online /enable-feature /featurename:netfx3 /Source:G:\sources\sxs然后运行，等待进度条到100%，提示操作成功完成。 在系统“控制面板”，“程序和功能”，&quot;启用或关闭Windows功能&quot;可以看到&quot;.NET Framework 3.5(包括.NET 2.0和3.0)&quot;,以被选中，表示安装成功。]]></content>
      <categories>
        <category>软件使用</category>
      </categories>
      <tags>
        <tag>Framework</tag>
        <tag>软件安装技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySql基础1]]></title>
    <url>%2F2018%2F11%2F06%2FMySql%E5%9F%BA%E7%A1%801%2F</url>
    <content type="text"><![CDATA[相关概念数据库优点1 持久化数据到本地 2 结构化查询 数据库常见概念1 DB:数据库 2 DBMS:数据库管理系统 3 SQL:结构化查询语言，用于和数据库通信的语言，是几乎所有数据库软件通用的语言 数据库存储数据的特点1 数据存放到表中，表存放到库中 2 一个库可以有多张表，每张表具有唯一的表名来标识自己 3 表中有一个或多个列，称为字段 4 表中的每行数据，相当于java中的对象 常见数据库管理系统MySql Oracle db2 sqlserver MySql背景前身属于瑞典的一加公司，MySql AB,08年被sun收购，09年sun被Oracle收购 MySql的优点1 开源 免费 成本低 2 性能高 移植性好 3 体积小 便于安装 MySql的安装属于C/S架构，一般来讲安装服务版 社区版 企业版 MySql服务的启动和停止方式一:命令行 net start 服务名 net stop 服务名 方式二: 计算机--管理--服务 MySql服务的登陆和退出登陆：mysql [-h 主机名 -P端口号] -u用户名 -p密码 退出:exit或ctrl+c DQL基础查询基础查询语法select 查询列表 from 表名 特点1 查询列表可以是字段 常量 表达式 函数 也可以是多个 2 查询结果是一个虚拟的表 示例1 查询单个字段 select 字段名 from 表名 2 查询多个字段: select 字段1，字段2 from 表名 3 查询所有字段 select * from 表名 4 查询常量 select 常量值 注意:字符型和日期型的常量值必须同单引号引起来，数值型不需要 5 查询函数 select 函数名(实参列表) 6 查询表达式 select 100/1024 7 别名 @ as 别名 @ 空格 别名 8 去重 select distinct 字段名 from 表名 9 + 作用:做加法运算 select 数值+数值;(直接运算) select 字符+数值;(先视图将字符转换为数值，如果转换陈工，则继续运算，否则转换成0，再做运算) select null+值;(结果都为null) 10 concat函数 功能:拼接字符 select concat(字符1，字符2,字符3...); 11 ifnull函数 功能:判断某字段或表达式是否为null,如果为null,返回指定的值，否则返回原值 select ifnull(字段名,指定值) from 表名 12 isnull 功能:判断某字段或表达式是否为null,如果是返回1，如果不是返回0 条件查询语法select 查询列表 from 表名 where 条件 筛选条件分类1 简单条件运算符 &gt; &lt; = &lt;&gt; != &gt;= &lt;= &lt;=&gt;(安全等于) 2 逻辑运算符 &amp;&amp; and || or ！ not 3 模糊查询 like：一般搭配通配符使用,可以判断字符型和数值型 通配符:%任意多个字符，_任意单个字符 between and in is null/is not null is null VS &lt;=&gt; 普通类型的数值 null值 可读性 is null 0 1 1 &lt;==&gt; 1 1 0]]></content>
      <categories>
        <category>MySql</category>
      </categories>
      <tags>
        <tag>MySql</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali安装RTL8812au驱动]]></title>
    <url>%2F2018%2F11%2F05%2Fkali%E5%AE%89%E8%A3%85RTL8812au%E9%A9%B1%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[配置好更新源更新软件源中所有软件列表apt-get update 安装Linux内核头文件apt-get install linux-headers-$(uname -r) 如果出现无法定位，找不到的情况 查找可用的linux-image和linux-headers apt-cache search linux-image apt-cache search linux-headers 例如出现以下信息 linux-headers-4.18.0-kali2-amd64 - Header files for Linux 4.18.0-kali2-amd64 因此需先更新到4.18.0版本的内核，然后再安装相应的头文件 apt install linux-image-4.18.0-kali2-amd64 apt install linux-headers-4.18.0-kali2-amd64 reboot 或者 apt install linux-image-4.18.0-kali2-amd64 reboot apt-get install linux-headers-$(uname -r) 或者直接完全升级系统 apt update apt upgrade apt dist-upgrade reboot 然后安装头文件 apt-get install linux-headers-$(uname -r) apt autoremove 安装网卡驱动apt install realtek-rtl88xxau-dkms reboot]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>kali</tag>
        <tag>无线驱动</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客站点实现静态资源压缩]]></title>
    <url>%2F2018%2F10%2F31%2FHexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9%E5%AE%9E%E7%8E%B0%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8E%8B%E7%BC%A9%2F</url>
    <content type="text"><![CDATA[静态资源压缩在站点目录下$ npm install gulp -g 安装gulp插件npm install gulp-minify-css --save npm install gulp-uglify --save npm install gulp-htmlmin --save npm insatll gulp-htmlclean --save npm install gulp-imagemin --save 在Hexo站点下添加gulpfile.js文件，文件内容如下:var gulp = require(&apos;gulp&apos;); var minifycss = require(&apos;gulp-minify-css&apos;); var uglify = require(&apos;gulp-uglify&apos;); var htmlmin = require(&apos;gulp-htmlmin&apos;); var htmlclean = require(&apos;gulp-htmlclean&apos;); var imagemin = require(&apos;gulp-imagemin&apos;); // 压缩css文件 gulp.task(&apos;minify-css&apos;, function() { return gulp.src(&apos;./public/**/*.css&apos;) .pipe(minifycss()) .pipe(gulp.dest(&apos;./public&apos;)); }); // 压缩html文件 gulp.task(&apos;minify-html&apos;, function() { return gulp.src(&apos;./public/**/*.html&apos;) .pipe(htmlclean()) .pipe(htmlmin({ removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, })) .pipe(gulp.dest(&apos;./public&apos;)) }); // 压缩js文件 gulp.task(&apos;minify-js&apos;, function() { return gulp.src([&apos;./public/**/.js&apos;,&apos;!./public/js/**/*min.js&apos;]) .pipe(uglify()) .pipe(gulp.dest(&apos;./public&apos;)); }); // 压缩 public/demo 目录内图片 gulp.task(&apos;minify-images&apos;, function() { gulp.src(&apos;./public/demo/**/*.*&apos;) .pipe(imagemin({ optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级） progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片 interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染 multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化 })) .pipe(gulp.dest(&apos;./public/uploads&apos;)); }); // 默认任务 gulp.task(&apos;default&apos;, [ &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;,&apos;minify-images&apos; ]); 在每次执行generate命令后执行gulp就可以实现静态自愿的压缩，压缩完成后执行deploy命令同步到服务器hexo g gulp hexo d 原文链接]]></content>
      <categories>
        <category>Hexo站点建设</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[譬如朝露，去日苦多]]></title>
    <url>%2F2018%2F10%2F30%2F%E8%AD%AC%E5%A6%82%E6%9C%9D%E9%9C%B2%EF%BC%8C%E5%8E%BB%E6%97%A5%E8%8B%A6%E5%A4%9A%2F</url>
    <content type="text"><![CDATA[人生如白驹过隙，倏忽而已。人生本无常，离去的便再也回不来，心中念着理想国，走在尘世吧。近几日李咏，查良庸先生相继离世，前几日还在看神雕与鹿鼎记，在众多的武侠作品中，我最喜欢的便是神雕，原文这是第三遍了。虽然不是其最好的作品，但还是向往书中冲破礼教的爱情，对传统的抗争，那种侠之大者，为国为民的江湖情怀。 世间要是缺了那种精神，总会给人以活在世上缺少一种痛快的感觉，侠以武乱禁，是对现世由庙堂对社会秩序维护的一种补充，为社会的公平与正义献出一份力量，像现代人期待英雄的出现，给人以无限的向往。除金庸先生外其他人也各有自己的江湖体系，各有各侠的衡量标准，甚至是仙侠构筑在神话体系之上，但总的来说还是金庸先生在华人世界中的影响力最大，当然古龙先生也是一位江湖泰斗，其他的诸如还珠，梁羽生，黄易，诸葛青，燕垒生等等，虽都有好的武侠故事，但在立意高度上还是有些差距，用以去构筑国人的精神世界还差一点。自其封笔后，以凤歌，孙晓，黄易等为代表，出现后武侠时代。啊，其实还尤其喜欢孙晓的英雄志。可惜一部作品等了十年都没有放出结局，真想骂一句孙晓老贼啊。所谓飞雪连天射白鹿，笑书神侠倚碧鸳，武侠也是需要继承的，精神更是需要继承的啊。]]></content>
      <categories>
        <category>人生杂谈</category>
      </categories>
      <tags>
        <tag>人生</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2018%2F10%2F29%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo加Github搭建个人博客安装node安装node并配置环境变量以及npm配置模块安装等内容不再赘述。 创建Github域名和空间1 注册Github账号，账号名称影响之后的访问地址。 2 创建仓库，存储网站。 安装Git不再赘述。 安装Hexonpm install hexo-cli -g 编写发布创建博客在电脑任意位置执行 hexo init username.github.io (username换成你自己在Github上的用户名) 更改配置安装主题切换到刚才生成的Hexo目录，安装主题。 以aero-dual主题为例 $ git clone https://github.com/levblanc/hexo-theme-aero-dual.git themes/aero-dual 更多主题 基础配置注意在Hexo目录中有两个_config.yml文件，一个是项目主配置文件，另一个在themes/主题文件夹 修改主配置文件示例: # Site title: 多维空间 subtitle: description: keywords: author: longer li language: zh-Hans timezone: # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: aero-dual # theme_style is default to &apos;light&apos; theme_style: dark # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: https://github.com/longerli/longerli.github.io.git 注意键值之间有空格。 主题配置修改主题文件夹中的_config.yml文件，略过(在主题下载网站对应每个主题都有) 写文章在username.github.io/source/_posts下创建你的第一篇博客，例如名称为FirstBlog.md,编辑Markdown文件，注意保存。 测试$ hexo s --debug 验证成功，此时便可以访问http://localhost:4000，会出现示例页面。 安装hexo-deployer-git自动部署发布工具npm insatll hexo-deployer-git --save 发布测试没问题后，我们就生成静态网页文件发布至我们的Github pages 中。 $ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 如果这是你的第一次，终端会让你输入Github 的邮箱和密码，正确输入后，稍等片刻，就会把你的博客上传至Github 了。以后在每次把博客写完后，执行一下这个命令就可以直接发布了。 访问在浏览器中输入http://username.github.io就能够访问了。]]></content>
      <categories>
        <category>Hexo站点建设</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F29%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
